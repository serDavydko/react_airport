{"version":3,"sources":["sources.js","MessageList.js","Message.js","App.js","index.js"],"names":["ADRESS","getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","link","response","posts","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","MessageList","state","data","details","sortDescending","arr","sort","b","Date","parse","received_at","webData","requests","map","item","concat","id","Promise","all","results","setState","_this$state","match","props","react_default","createElement","className","react_router_dom","to","path","slice","filter","elem","important","is_read","subject","preheader","from_message","length","React","Component","Message","params","_this$state$data","cc","bcc","body","join","App","react_router","exact","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.54f0534c.chunk.js","sourcesContent":["export const ADRESS = 'https://fmail.flyaps.com/api/v1/mailbox/messages/';\n\nexport const getData = async(link) => {\n  const response = await fetch(link);\n  const posts = await response.json();\n\n  return posts;\n};\n","import React from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { ADRESS, getData } from './sources';\n\nclass MessageList extends React.Component {\n  state = {\n    data: [],\n    details: [],\n  }\n\n  async componentDidMount() {\n    const webData = await getData(ADRESS);\n    const requests = webData.map(item => getData(ADRESS.concat(item.id)));\n    const results = await Promise.all(requests);\n\n    this.setState({\n      details: results,\n      data: this.sortDescending(webData),\n    });\n  }\n\n  sortDescending = arr => arr.sort((a, b) => Date.parse(b.received_at) - Date.parse(a.received_at));\n\n  render() {\n    const { data, details } = this.state;\n    const { match } = this.props;\n\n    return (\n      <ul className=\"post-container\">\n        {data.map(item => (\n\n          <Link\n            to={`${match.path}${item.id}`}\n            className=\"link\"\n          >\n            <li className=\"post-item\">\n              <p>\n                <span className=\"topic\">\n                  {item.received_at.slice(0, 10)}\n                </span>\n              </p>\n              <p>\n                <span>important: </span>\n                <span>\n                  {`${details.filter(elem => elem.id === item.id)[0].important}`}\n                </span>\n                <br />\n                <span>is read: </span>\n                <span>\n                  {`${details.filter(elem => elem.id === item.id)[0].is_read}`}\n                </span>\n                <br />\n                <span>subject: </span>\n                <span>{item.subject}</span>\n                <br />\n                <span>preheader: </span>\n                <span>\n                  {item.preheader}\n                </span>\n                <br />\n                <span>user: </span>\n                <span>\n                  {item.from_message.slice(1, item.from_message.length - 1)}\n                </span>\n              </p>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    );\n  }\n}\n\nMessageList.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default MessageList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ADRESS, getData } from './sources';\n\nclass Message extends React.Component {\n  state = {\n    data: '',\n  }\n\n  async componentDidMount() {\n    const data = await getData(ADRESS.concat(`/${this.props.match.params.id}`));\n\n    this.setState({\n      data,\n    });\n  }\n\n  render() {\n    const {\n      to, cc, bcc, body,\n    } = this.state.data;\n\n    return (\n      <li className=\"post-item\">\n        <p>\n          <span>to: </span>\n          <span>\n            {to && to.join(', ')}\n          </span>\n          <br />\n          <span>cc: </span>\n          <span>\n            {cc && cc.join(', ')}\n          </span>\n          <br />\n          <span>bcc: </span>\n          <span>\n            {bcc && bcc.join(', ')}\n          </span>\n          <br />\n          <span>body: </span>\n          <span>\n            {body}\n          </span>\n        </p>\n      </li>\n    );\n  }\n}\n\nMessage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default Message;\n","import React from 'react';\nimport {\n  BrowserRouter, Route, Switch, Link,\n} from 'react-router-dom';\nimport MessageList from './MessageList';\nimport Message from './Message';\n\nconst App = () => (\n  <BrowserRouter>\n    <div className=\"App\">\n      <header className=\"header-container\">\n        <Link to=\"/messages/\">Inbox</Link>\n      </header>\n      <Switch>\n        <Route path=\"/\" exact component={MessageList} />\n        <Route path=\"/messages/\" exact component={MessageList} />\n        <Route path=\"/messages/:id\" component={Message} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}